<<<<<<< HEAD
// questo codice viene eseguito al momento del require
console.log("Codice scritto direttamente");

/* ***************************************** */

// esposizione di una funzione in forma anonima
// che viene poi richiamata con [puntatore modulo]() nel main
//  - la funziona anonima può essere una ed una sola
//  - se faccio più export l'ultimo copre gli altri
//  - devo fare l'export della funzione anonima prima di quelle esplicite
module.exports = () => {
    console.log("Funzione anonima");
}
/*
    EQUIVALENTE
    let anonima = () => {
        console.log("Funzione anonima");
    };
    module.exports = anonima;
*/

/* ***************************************** */

// esposizione di una funzione in forma esplicita
module.exports.somma = (a, b) => {
    return a + b;
}
// EQUIVALENTI
let moltiplicazione = (a, b) => {
    return a * b;
}
module.exports.moltiplicazione = moltiplicazione;

/* ***************************************** */

// esposizione di un json
let json = {
    "nome": "pippo",
    "setNome": function (s) {
        // se uso la arrow func non funziona perchè non vede this
        this.nome = s;
    }
}
module.exports.json = json;

/* ***************************************** */

// esposizione di una classe (ES6)
class MyClass {
    constructor() {
        this.nome = "pippo";
    }

    setNome(s) {
        this.nome = s;
    }
}

=======
// questo codice viene eseguito al momento del require
console.log("Codice scritto direttamente");

/* ***************************************** */

// esposizione di una funzione in forma anonima
// che viene poi richiamata con [puntatore modulo]() nel main
//  - la funziona anonima può essere una ed una sola
//  - se faccio più export l'ultimo copre gli altri
//  - devo fare l'export della funzione anonima prima di quelle esplicite
module.exports = () => {
    console.log("Funzione anonima");
}
/*
    EQUIVALENTE
    let anonima = () => {
        console.log("Funzione anonima");
    };
    module.exports = anonima;
*/

/* ***************************************** */

// esposizione di una funzione in forma esplicita
module.exports.somma = (a, b) => {
    return a + b;
}
// EQUIVALENTI
let moltiplicazione = (a, b) => {
    return a * b;
}
module.exports.moltiplicazione = moltiplicazione;

/* ***************************************** */

// esposizione di un json
let json = {
    "nome": "pippo",
    "setNome": function (s) {
        // se uso la arrow func non funziona perchè non vede this
        this.nome = s;
    }
}
module.exports.json = json;

/* ***************************************** */

// esposizione di una classe (ES6)
class MyClass {
    constructor() {
        this.nome = "pippo";
    }

    setNome(s) {
        this.nome = s;
    }
}

>>>>>>> ff83700c25cd62334609fde367533e9e36db0c18
module.exports.MyClass = new MyClass();